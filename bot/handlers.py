from aiogram.types import Message
from aiogram.filters.command import CommandStart
from aiogram.enums.content_type import ContentType

import logging

from init import dp, eora_assist


logger = logging.getLogger(__name__)


@dp.message(CommandStart())
async def com_start(msg: Message):
    text = (
        'üëã –ü—Ä–∏–≤–µ—Ç! –Ø EORA Assistant ‚Äî —Ç–µ—Å—Ç–æ–≤—ã–π –ò–ò-–±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ EORA.\n'
        '–ú–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–º–æ–≥–∞—Ç—å –≤–∞–º –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–µ–π—Å–∞–º–∏ –∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∫–æ–º–ø–∞–Ω–∏–∏.\n\n'
        '–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –º–Ω–µ –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å, –æ–ø–∏—Ä–∞—è—Å—å —Ç–æ–ª—å–∫–æ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã —Å —Å–∞–π—Ç–∞ EORA.'
    )

    await msg.answer(text)



@dp.message()
async def chat(msg: Message):
    if msg.content_type != ContentType.TEXT.value:
        await msg.answer('üìù –ù–µ –º–æ–≥—É –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç')
        return

    try:
        sent = await msg.answer('‚è≥ –î—É–º–∞—é')

        response = eora_assist.answer_text(msg.text)
        # logger.warning(f'response: {response}')
        try:
            await sent.edit_text(response)
        except Exception:
            # –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
            await msg.answer(response, parse_mode=None)

    except Exception as e:
        logger.exception(e, exc_info=True)
        await msg.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
